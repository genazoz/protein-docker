# Use postgres/example user/password credentials
version: '3.9'

services:
  nodejs:
    build: .
    working_dir: /app
    volumes:
      - ./:/app
    expose:
      - "5000"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./cert.pem:/etc/ssl/certs/cert.pem:ro
      - ./key.pem:/etc/ssl/private/key.pem:ro
    depends_on:
      - nodejs

  protein-backend:
    container_name: protein-backend
    build: .
    expose:
      - 5000
    env_file:
      - ./.production.env
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    command: npm run start
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_ROOT_PASSWORD: postgres
      POSTGRES_DB: protein
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: kehxbrKEHXBR1!
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

networks:
  app-network:
    driver: bridge
